Type checking ./Bit.idr
Type checking ./Bit.idr
λΠ> :t one
one : Bit
λΠ> :t bit
No such variable bit
λΠ> :t id
Prelude.Basics.id : a -> a
Bit.id : Bit -> Bit
Type checking ./unit.idr
Type checking ./unit.idr
Type checking ./unit.idr
Type checking ./bool.idr
Type checking ./bool.idr
Type checking ./bool.idr
λΠ> id true
Can't disambiguate name: Prelude.Basics.id, bool.id
λΠ> bool.id true
true : bool
Type checking ./bool.idr
Type checking ./bool.idr
Type checking ./bool.idr
Type checking ./bool.idr
Type checking ./bool.idr
Type checking ./unit.idr
Type checking ./bool.idr
Type checking ./bool.idr
λΠ> bool.id true
No such variable rue
λΠ> bool.id true
true : bool
λΠ> bool.id false
false : bool
λΠ> bool.constFalse false
false : bool
λΠ> bool.constTrue. false
No such variable bool.constTrue.false
λΠ> bool.constTrue. True
No such variable bool.constTrue.True
λΠ> bool.constTrue True
(input):1:16:When checking an application of function bool.constTrue:
        Type mismatch between
                Bool (Type of True)
        and
                bool (Expected type)
λΠ> bool.constTrue true
true : bool
λΠ> constTrue true
true : bool
λΠ> 